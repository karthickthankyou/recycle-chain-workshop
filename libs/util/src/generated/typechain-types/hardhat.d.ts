/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from 'ethers'
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from '@nomicfoundation/hardhat-ethers/types'

import * as Contracts from '.'

declare module 'hardhat/types/runtime' {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: 'Math',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.Math__factory>
    getContractFactory(
      name: 'Strings',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.Strings__factory>
    getContractFactory(
      name: 'RecycleChain',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.RecycleChain__factory>

    getContractAt(
      name: 'Math',
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.Math>
    getContractAt(
      name: 'Strings',
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.Strings>
    getContractAt(
      name: 'RecycleChain',
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.RecycleChain>

    deployContract(
      name: 'Math',
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.Math>
    deployContract(
      name: 'Strings',
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.Strings>
    deployContract(
      name: 'RecycleChain',
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.RecycleChain>

    deployContract(
      name: 'Math',
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.Math>
    deployContract(
      name: 'Strings',
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.Strings>
    deployContract(
      name: 'RecycleChain',
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.RecycleChain>

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<ethers.ContractFactory>
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer,
    ): Promise<ethers.ContractFactory>
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<ethers.Contract>
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<ethers.Contract>
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<ethers.Contract>
  }
}
